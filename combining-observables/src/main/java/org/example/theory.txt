* Combining observables

- These allow us to perform combinations between observables.

*merge and concatenating

Merging the emissions of multiple observables to have a single observable source, the kind of emissions that will emit depends on the type of merge operator we use.

Merge:

merge two observables, but we can merge more observables.

Merge does not maintain a particular order of the elements emitted, the new observable will have the elements emitted
in the combined order of the emissions of the combined observables.

Concat:

Concat allow us to combine two or more observables, the difference with merge in that concat maintains the sequential order of the emitted elements when combine sources.

*flatMap concatMap

flatMap and concatMap allow us to transform observable and take observables result as source to convert all that in just one observable.


- flatMap: it receives a mapper function, it takes each emission or each element and then break it up into multiple elements and returns an observable having those elements
and finally when we get all the observables corresponding to each element this operating merge the result to a new observable. Flat map takes all the observables
return by each element and flatten them or merge them to have a single observable. We conserve the places originally because this is a merge operation. In other words
flatMap take a mapper but this mappers return another observable, when all values are processed and return and observable, flatMap flatten it.

- concatMap: there is just one difference between the last operations, concatMap executes a concat operation at the end when join the observables, so are going to have
the observable in a sequential order.

